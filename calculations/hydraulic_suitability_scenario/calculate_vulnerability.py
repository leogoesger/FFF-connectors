import datetime


def calculate_vulnerability(matrix, limits, inputs):

    col_num = {
        'min': 0,
        '10th': 1,
        '25th': 2,
        '50th': 3,
        '75th': 4,
        '90th': 5,
        'max': 6
    }

    abs_vul = None

    lower_col = col_num[limits['lower_limit']]
    upper_col = col_num[limits['upper_limit']]

    start_indx = get_indx_num(inputs['bioperiod_start_date'].split('/'))

    end_indx = get_indx_num(inputs['bioperiod_end_date'].split('/'))

    scenario = matrix['scenario']
    percentile = matrix['percentile']

    abs_vul = 0
    median = 0

    for i in range(start_indx, end_indx + 1):
        lower_boundry = float(scenario[i][1]) - float(percentile[i][lower_col])
        upper_boundry = float(percentile[i][upper_col]) - float(scenario[i][1])

        if lower_boundry < 0:
            abs_vul = abs_vul + abs(lower_boundry)
        elif upper_boundry < 0:
            abs_vul = abs_vul + abs(upper_boundry)

        median = median + float(percentile[i][col_num['50th']])

    return abs_vul/median


def get_indx_num(date):
    day_of_year = int(datetime.date.fromisoformat(
        '1968-'+date[0].rjust(2, '0')+'-'+date[1].rjust(2, '0')).strftime('%j'))

    # Oct 1 in leap year is 275th day of the year

    return day_of_year - 275 if day_of_year - 275 >= 0 else day_of_year - 275 + 366
