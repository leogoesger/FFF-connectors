import os
import glob
from utils.helpers import read_csv_to_arrays
from utils.constants import CEND, CRED

from calculations.hydraulic_suitability_scenario.calculate_vulnerability import calculate_vulnerability


class Vulnerability:
    senario_files = 'files_output/hydraulic_suitability_scenario/*senario.csv'
    percentile_files = 'files_output/hydraulic_suitability_scenario/*opt_percentile.csv'
    col_num = {
        'min': 0,
        '10th': 1,
        '25th': 2,
        '50th': 3,
        '75th': 4,
        '90th': 5,
        'max': 6
    }
    """Calculate Vulnerability

    """

    def __init__(self, limits, inputs):
        self.limits = limits
        self.inputs = inputs
        self.vulnerability = [['File Name', 'Function', 'Vulnerability']]

        self.num_of_func = len(self.limits)

        self.files = ({'scenario': glob.glob(
            self.senario_files), 'percentile': glob.glob(self.percentile_files)})

        if not len(self.files):
            print(
                CRED + "Looks like you have not uploaded any files into input folders..."+CEND)
            return

        self.calc_vulnerability()

    def read_scenario_and_opt_percentile(self, scenario, percentile):
        """
          Read both scenario and its ts file into matrix.
          scenario file format xx_xx_x_func_x_scenario.csv
          opt_percentile file format xx_xx_x_func_x_opt_percentile.csv
        """

        scenario_matrix = read_csv_to_arrays(scenario)
        percentile_matrix = read_csv_to_arrays(percentile)

        return ({'scenario': scenario_matrix, 'percentile': percentile_matrix})

    def calc_vulnerability(self):

        for i in range(0, len(self.files['scenario'])):
            scenario_percentile = self.read_scenario_and_opt_percentile(
                self.files['scenario'][i], self.files['percentile'][i])

            func = self.files['scenario'][i].split('func_')[1].split('_')[0]

            vulnerability = calculate_vulnerability(
                scenario_percentile, self.limits['func_'+func], self.inputs['func_'+func])

            file_name = self.files['scenario'][i].split(
                'scenario/')[1].split('_func')[0]

            self.vulnerability.append([file_name, 'func_'+func, vulnerability])
